import { 
  useRouter 
} from 'next/router'
import { 
  MantineProvider,
  createEmotionCache,
  ColorSchemeProvider
} from '@mantine/core'
import {
  useHotkeys,
  useLocalStorage
} from '@mantine/hooks'
import Head from 'next/head'
import '@/styles/globals.css'
import rtlPlugin from 'stylis-plugin-rtl'
import ChatProvider from '@/Context/ChatProvider'
import RouterTransition from '@/settings/RouterTransition'
import { NotificationsProvider } from '@mantine/notifications'

const rtlCache = createEmotionCache({
  key: 'mantine-rtl',
  stylisPlugins: [rtlPlugin]
})

const App = ({Component, pageProps}) => {
  const router = useRouter()
  // color localstorage state and togglers
  const [colorScheme, setColorScheme] = useLocalStorage({
    key: 'mantine-color-scheme',
    defaultValue: 'dark',
    getInitialValueInEffect: true,
  })
  const toggleColorScheme = (value) =>
    setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'))
  useHotkeys([['shift+m', () => toggleColorScheme()]])
  return (
    <>
      <Head>
        <title>Chat</title>
        <meta name="description" content="Generated by create next app" />
        <meta 
          name="viewport" 
          content="minimum-scale=1, initial-scale=1, width=device-width" 
        />
      </Head>
      <ColorSchemeProvider 
        colorScheme={colorScheme} 
        toggleColorScheme={toggleColorScheme}
      >
        <MantineProvider
          withGlobalStyles
          withNormalizeCSS
          emotionCache={rtlCache}
          theme={{
            colorScheme, 
            dir: "rtl",
            fontFamily: 'Tajawal, sans-serif',
            colors: {
              Primary: colorScheme == 'dark' ? ['#766AC8'] : ['#007bff'],
              Secondary: ['#020422'],
            }, 
            components: {
              Title: {styles: (theme) => ({
                    root: {fontFamily: theme.fontFamily}}
              )}
            }
          }}
        >
          <NotificationsProvider zIndex={3000}>
            <ChatProvider>
              <RouterTransition />
              <Component {...pageProps}/>
            </ChatProvider>
          </NotificationsProvider>
        </MantineProvider>
      </ColorSchemeProvider>
    </>
  )
}

export default App